<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (COVID March)' inline='true' name='federated.0wpo6ri0vdr1b11byubuz17buefc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID March' name='excel-direct.1q3b9wx00wzci40zoidj9185k06n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/scwoody411/Documents/COVID March.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1q3b9wx00wzci40zoidj9185k06n' name='US after March 10' table='[&apos;US after March 10$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='FIPS' ordinal='0' />
            <column datatype='string' name='Admin2' ordinal='1' />
            <column datatype='string' name='Province_State' ordinal='2' />
            <column datatype='string' name='Country_Region' ordinal='3' />
            <column datatype='string' name='Last_Update' ordinal='4' />
            <column datatype='real' name='Lat' ordinal='5' />
            <column datatype='real' name='Long_' ordinal='6' />
            <column datatype='integer' name='Confirmed' ordinal='7' />
            <column datatype='integer' name='Deaths' ordinal='8' />
            <column datatype='integer' name='Recovered' ordinal='9' />
            <column datatype='integer' name='Active' ordinal='10' />
            <column datatype='string' name='Combined_Key' ordinal='11' />
            <column datatype='date' name='Day_Month' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Update</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last_Update]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Last_Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long_]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Long_</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_Key</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Combined_Key]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Combined_Key</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day_Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Day_Month]</local-name>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias>Day_Month</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US after March 10]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&quot;' value='Cases' />
        </aliases>
      </column>
      <column caption='State Percentage of US Cases' datatype='real' name='[Calculation_6997327219292999684]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Confirmed])/187680' />
      </column>
      <column caption='Combined Key' datatype='string' name='[Combined_Key]' role='dimension' type='nominal' />
      <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='string' name='[Last_Update]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long' datatype='real' name='[Long_]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Regional US NJ NY' datatype='string' name='[Province State (group) 1 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
          <bin default-name='true' value='&quot;Dead&quot;'>
            <value>&quot;Dead&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Midwest&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;New Jersey&quot;'>
            <value>&quot;New Jersey&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;New York&quot;'>
            <value>&quot;New York&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Northeast&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Recovered&quot;'>
            <value>&quot;Recovered&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southeast&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southwest&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Territories&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Diamond Princess&quot;</value>
            <value>&quot;Grand Princess&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Virgin Islands&quot;</value>
            <value>&quot;Wuhan Evacuee&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Regional US' datatype='string' name='[Province State (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
          <bin default-name='true' value='&quot;Dead&quot;'>
            <value>&quot;Dead&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Midwest&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Northeast&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Recovered&quot;'>
            <value>&quot;Recovered&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southeast&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southwest&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Territories&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Diamond Princess&quot;</value>
            <value>&quot;Grand Princess&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Virgin Islands&quot;</value>
            <value>&quot;Wuhan Evacuee&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='US by State' datatype='string' name='[Province State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
          <bin default-name='false' value='&quot;Continental US Cases&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Dead&quot;'>
            <value>&quot;Dead&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Recovered&quot;'>
            <value>&quot;Recovered&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Territories&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Diamond Princess&quot;</value>
            <value>&quot;Grand Princess&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Virgin Islands&quot;</value>
            <value>&quot;Wuhan Evacuee&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.447987' measure-ordering='alphabetic' measure-percentage='0.552013' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Province_State:nk]' palette='orange_10_0' type='palette'>
            <map to='#4e7fac'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wuhan Evacuee&quot;</bucket>
            </map>
            <map to='#a13e22'>
              <bucket>&quot;Dead&quot;</bucket>
            </map>
            <map to='#a13e22'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#a44022'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#a84222'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ab4422'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Virgin Islands, U.S.&quot;</bucket>
            </map>
            <map to='#b24723'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b54923'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b84b23'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Princess&quot;</bucket>
            </map>
            <map to='#bc4c23'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c25022'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c55222'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#cb5522'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#cf5722'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d95d20'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#df6120'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#e46620'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#e76820'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#ed7020'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#ef7824'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f07c26'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f17f28'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#f2832a'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#f2872d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f38a2f'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f59637'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#f5993a'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f59d3d'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f5a141'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f5a544'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f5a848'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f6ab4e'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#f8b15b'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f9b461'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#fcbd73'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#fdc079'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#fec37f'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Province State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;US States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Continental US Cases&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Province State (group) 1 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Dead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Territories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Midwest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Province State (group) 1]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Midwest&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dead&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Territories&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='NY NJ - Northeast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='Regional US NJ NY' datatype='string' name='[Province State (group) 1 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
                <bin default-name='true' value='&quot;Dead&quot;'>
                  <value>&quot;Dead&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New Jersey&quot;'>
                  <value>&quot;New Jersey&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New York&quot;'>
                  <value>&quot;New York&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Recovered&quot;'>
                  <value>&quot;Recovered&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Territories&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Diamond Princess&quot;</value>
                  <value>&quot;Grand Princess&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Virgin Islands&quot;</value>
                  <value>&quot;Wuhan Evacuee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Province State (group) 1 1]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Province State (group) 1 1]' member='&quot;Dead&quot;' />
                <groupfilter function='member' level='[Province State (group) 1 1]' member='&quot;Midwest&quot;' />
                <groupfilter from='&quot;Recovered&quot;' function='range' level='[Province State (group) 1 1]' to='&quot;West&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Northeast&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{E3533254-EE06-4D76-81C3-8E0557268CF7}' />
    </worksheet>
    <worksheet name='Regional US'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='State Percentage of US Cases' datatype='real' name='[Calculation_6997327219292999684]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Confirmed])/187680' />
            </column>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='Regional US' datatype='string' name='[Province State (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
                <bin default-name='true' value='&quot;Dead&quot;'>
                  <value>&quot;Dead&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Recovered&quot;'>
                  <value>&quot;Recovered&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Territories&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Diamond Princess&quot;</value>
                  <value>&quot;Grand Princess&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Virgin Islands&quot;</value>
                  <value>&quot;Wuhan Evacuee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='Max' name='[max:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6997327219292999684]' derivation='User' name='[usr:Calculation_6997327219292999684:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Province State (group) 1]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Province State (group) 1]' member='&quot;Dead&quot;' />
                <groupfilter function='member' level='[Province State (group) 1]' member='&quot;Recovered&quot;' />
                <groupfilter function='member' level='[Province State (group) 1]' member='&quot;Territories&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Northeast&quot;</bucket>
              <bucket>&quot;Southeast&quot;</bucket>
              <bucket>&quot;Midwest&quot;</bucket>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;Southwest&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='p0.0%' />
            <format attr='font-weight' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='bold' />
            <format attr='font-size' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='16' />
            <format attr='wrap' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='auto' />
            <format attr='text-align' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]' />
              <text column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219292999684:qk]' />
            </encodings>
            <label-data column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[max:Day_Month:qk]' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{8D4AF084-FEA5-44C7-BC3B-1A134BF39B16}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='US by State' datatype='string' name='[Province State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
                <bin default-name='false' value='&quot;Continental US Cases&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Dead&quot;'>
                  <value>&quot;Dead&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Recovered&quot;'>
                  <value>&quot;Recovered&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Territories&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Diamond Princess&quot;</value>
                  <value>&quot;Grand Princess&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Virgin Islands&quot;</value>
                  <value>&quot;Wuhan Evacuee&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Province State (group)]' />
              <groupfilter function='member' level='[Province State (group)]' member='&quot;Territories&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{2288612E-0062-4C67-99C1-CA3E36E4C7D0}' />
    </worksheet>
    <worksheet name='US Cases &amp; Death Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Province_State:nk]' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Recovered&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk] + [federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Deaths:qk])</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{3DD70D67-5FF8-4899-ADD3-48476F311E8D}' />
    </worksheet>
    <worksheet name='US Cases Exponential Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Province_State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Province_State:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;American Samoa&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Dead&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Diamond Princess&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Grand Princess&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Guam&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Recovered&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Wuhan Evacuee&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{053566C5-D379-47A0-B800-BB6A86CCC3E6}' />
    </worksheet>
    <worksheet name='US Cases by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='State Percentage of US Cases' datatype='real' name='[Calculation_6997327219292999684]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Confirmed])/187680' />
            </column>
            <column caption='[State Percentage of US Cases]*100' datatype='real' name='[Calculation_6997327219293143045]' role='measure' type='quantitative' user:unnamed='US Cases by State'>
              <calculation class='tableau' formula='[Calculation_6997327219292999684]*100' />
            </column>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='Max' name='[max:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6997327219293143045]' derivation='User' name='[usr:Calculation_6997327219293143045:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Province_State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;American Samoa&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Dead&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Diamond Princess&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Grand Princess&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Guam&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Recovered&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Wuhan Evacuee&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]' />
              <text column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[usr:Calculation_6997327219293143045:qk]' />
            </encodings>
            <label-data column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[max:Day_Month:qk]' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true' fontcolor='#787878'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{531908DE-E499-4946-AF4A-A500DF3A823B}' />
    </worksheet>
    <worksheet name='US Cases, Recovered, Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (COVID March)' name='federated.0wpo6ri0vdr1b11byubuz17buefc' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpo6ri0vdr1b11byubuz17buefc'>
            <column caption='Cases' datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[Day_Month]' role='dimension' type='ordinal' />
            <column caption='US by State' datatype='string' name='[Province State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Province_State]' new-bin='true'>
                <bin default-name='false' value='&quot;Continental US Cases&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Dead&quot;'>
                  <value>&quot;Dead&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Recovered&quot;'>
                  <value>&quot;Recovered&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Territories&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Diamond Princess&quot;</value>
                  <value>&quot;Grand Princess&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Virgin Islands&quot;</value>
                  <value>&quot;Wuhan Evacuee&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Day_Month]' derivation='None' name='[none:Day_Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Province State (group)]' />
              <groupfilter function='member' level='[Province State (group)]' member='&quot;Territories&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Continental US&quot;</bucket>
              <bucket>&quot;Territories&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Continental US Cases&quot;</bucket>
              <bucket>&quot;Recovered&quot;</bucket>
              <bucket>&quot;Dead&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number:&#9;</run>
                <run bold='true'>&lt;[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0wpo6ri0vdr1b11byubuz17buefc].[sum:Confirmed:qk]</rows>
        <cols>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Day_Month:qk]</cols>
      </table>
      <simple-id uuid='{5A9C2A40-6EDA-4454-8FDB-931F33BD980E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='US Cases, Recovered, Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E4A037C-3798-4466-B756-0A29B8F16FF1}' />
    </window>
    <window class='worksheet' name='US Cases by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06438806-7255-44FD-9DB5-77508C2AC2ED}' />
    </window>
    <window class='worksheet' name='US Cases Exponential Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C0B9D82-CC3E-47E3-9431-D3D8E92D5729}' />
    </window>
    <window class='worksheet' name='US Cases &amp; Death Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[:Measure Names]</field>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[attr:Province_State:nk]</field>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{271E5F14-AF31-460C-B34F-2EB85017B5E6}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C92DAE8E-A55B-47BE-B787-518DA0A76212}' />
    </window>
    <window class='worksheet' name='Regional US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1]</field>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C28D5A73-C105-4811-9199-F498AF18DEFA}' />
    </window>
    <window class='worksheet' maximized='true' name='NY NJ - Northeast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpo6ri0vdr1b11byubuz17buefc].[Province State (group) 1 1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE14BF05-8B84-4470-86ED-F435FE669AFE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='NY NJ - Northeast' width='384'>
      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
      0EAmk6Guro7vfe97M3ZrlnxTAIgUmPb2du677z4OHjzI97//fR5++OHc16Ioyl14p6WlhR/9
      6EfHPTaTybwnMFzX5c4772TNmjX84he/4Ac/+EGuoN533338+Mc/zl0YaOzzn0gURURRhO/7
      bN++HWstQRAcd58HHniArVu3kkql+M53vkMikeA//uM/2LNnDzt37uSnP/0pR44c4d///d/J
      ZDI8/vjjPP300+zfv59//dd/JRaL8bd/+7cAfPGLX2TRokVFux/SZNMQkEgBWrZsGX/5l3/J
      XXfdxTe+8Q0+97nP8fOf/5zDhw+TSqX4h3/4B37+859TV1fHX/3VX/GP//iPPPHEE+zduxfH
      cfje97530uGeSy65hJ07d3LFFVcwODiY25voF7/4Ba+//jrDw8N861vfYtmyZfzoRz+iqqqK
      xYsXs3jxYh5//HEqKir45je/SW9vL3/zN39DS0sLf//3f5/bivkrX/kKs2bNor+/n40bN5JM
      JnnzzTf52c9+BsDXv/51/vRP/5Sf/OQnxONxenp6SCQSvPDCC9x1113cfvvtHDlyhLq6Otat
      Wzcl73ex0hGASAGrqalh9uzZDAwM8JWvfIW/+Iu/4Nxzz+W1117ja1/7GhdddBH/7//9P8Iw
      ZMeOHXz3u99l9erVvPDCCyd9zk9+8pO88sor7Nq1i49+9KO522+77Ta+/vWvc8UVV7B582ai
      KGLr1q2cd9553H777TzyyCP827/9Gz/+8Y+ZO3cuc+bM4V/+5V+4++672bNnT+55Kioq2LVr
      F3/913/Nl770JUpKSigrK6O0tJSqqiqCIMB1XTKZDP/8z/9Mc3Mzt99+O729vdTW1uI4DgsX
      LqSvr29S31tRAIgUtMHBQRKJBKWlpXz/+9+nrq4O13UJgiC3BXJJSQmpVIquri7uu+8+hoaG
      3ney97zzzuPQoUNs2bIld6EUay0//OEPefXVV48b1lm7di133HFHbvv0mpoaysrKcF2XWCxG
      ZWUl5eXlxw3R7Ny5kx//+Md85zvf4XOf+xwVFRWkUqncduuxWAxjDN/+9rc555xz+OEPf0hF
      RQXz5s2jq6sLay3d3d3TasJ6ulIAiBSglpYW7rvvPr75zW9y8803U1paSldXF8uWLctdPL6i
      ooKGhgZ+97vfMXv2bGpqali1ahVr166lpKTkpM/tui6rV6/mzTffzF0Vy1rLkSNHOPfcc3PP
      P3pfx3GorKxk/vz5/M///A9PPPHE+16m8rHHHmP58uW56yVnMhkuvPBCfvazn/Gf//mfXHrp
      pezfv5/W1lZisRiPP/44f/zjH7nuuut49NFHefLJJ9m+fTuXX375GXo35WRm1PUARGaCeDzO
      3LlzmTdvHrfffjvr1q2jvLycpUuX0tnZyQ033MCHPvQhzj77bFasWEFHRwcXXngh1157LU1N
      TZSWlnL55Zfnrv/63HPPsW7dOkpKSqipqeGcc85h5cqVfOQjH2Hx4sUsWLCAc889l/PPP5+G
      hgbWrVvHhz/8YZYsWUJtbS1nn302ruvysY99jO7ubuLxOOeddx5Lly7l7LPPZtasWSxdupSa
      mhoAZs2aRU1NDaWlpZSWlnLuuedyzTXX0Nvby4IFC7jnnnuIx+MsXrw4d58FCxawdu1azj33
      XJqamvjzP/9zFi1aBMAf/vAHrr322vcNNZkYXQ9AZIb71re+xRVXXMFll13GqlWr8t2ccRse
      HubZZ5/ld7/7Hf/1X/+VuyawnDkKAJEZrqGhgeHhYRYtWpS7YP10kMlkOHToEI7jsGbNGi0E
      mwQKABGRIqVJYBGRIvX/AaydfTEVe14cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Regional US' width='384'>
      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
      Ix7AAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='US Cases &amp; Death Trends' width='384'>
      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
      MmbMGJYvX86ePXvIy8ujrKyM++67j0gkQlFREU899RRvvfUW0H4lwn333YcxhqKiIvbtG34f
      jnLttdem9xrb2tqwbZu8vPa7sHft2sXJkydxHId7772Xc+fO0dbWxqFDh1i6dCklJSU4jsPK
      lSvZunVrepktLS0sXryY/Px8Dhw4MGQGEb3VcXliY2MjRUVFlJeXM23aNABOnjzJF198ge/7
      3HLLLZSUlHDw4EGam5spLCxkwYIF2LbN448/TjgcpqGhgU2bNjF58mQmT56M7/scPnwY13Uz
      uYlXxcyZMzl8+DALFiygrKyM2bNnA+17B5s3byaZTDJx4kRuueUWvvzyS2KxGCdPnmTVqlXY
      ts2tt95KJBLB93327duH53kUFBRw/fXXk5+fT1lZWZ/qGlYBMHnyZI4dO8bChQupqqriuuuu
      A9qfL7R8+XIA1qxZw7x58zhw4ADFxcXcfffd6cv7br755vTTSOfNmzdkOn+A4uJiTp48iTEm
      HX5nzpzBcRyWLVuGbdu89957NDQ0cPToURzHYdWqVenr2js+iOf7ampq2LBhA42NjfzkJz8Z
      6E266kKhEPn5+Zw7d45Tp04xY8YMjh07BrS/YWfPns2BAwfYv38/ubm5bN26lSeeeILi4mKg
      /e/qT++lWLhwIatXryYSiTB37txheeno7NmzOXToEHPmzCEWi6UP/4wZM4aVK1fS1NTExx9/
      zEMPPcSHH37Ifffdlx6MWZZFKBTi2LFjbNu2jYceegiATz75hK+++oqpU6dSUlKSsW27Wq67
      7jqOHDnCTTfdxKlTp5gyZQrQ/jd0xx13APD2228zb9489u/fz/jx47nrrrvSfVAkEqGxsZH3
      3nuPRYsWEYvFiEajvPTSSzQ1NfFnf/ZnfaprWAVANBolNzeXEydOkJ+fTzgcxvd9zp8/z0cf
      fURJSQmJRALf9ykoKOCee+7pdMPFjh07+PnPf040GuW1115j8eLFQ+bGH9u2KSkpoaKiAsuy
      0k9TbWlp4f3332fcuHG0tbXheR45OTnceeed6dHuxYwbN45nn32WEydOsHnzZh599NEhFYq9
      MXfuXA4cOEB9fT0rVqzg2LFj+L7P1q1biUajJJNJCgsLyc3N5Y477mDcuHGXXN6OHTv42c9+
      RiwWS/8NDbcboUpLSzlw4AChUIjrr7+eb75p/8yGQ4cOUVVVRVFREZ7nAe1BOnfu3E5/N199
      9RXHjh3j6aefTv+dLlu2jPnz57N582bKy8vTg7fhIhqNEovFOHHiBIWFhel+5fz583z88ccU
      FxeTTCYJgoCCggLuvvvuToOLuro63n77bR5++GGKi4upra0lHA7z05/+lLq6OrZu3cojjzxy
      2XUNu+HJrFmzeO+995g1a1Z62okTJ5g+fTrz589Pv/CO43QZnbmuS0tLC21tbUPyBN6NN97I
      2rVrmTHju6eJVldXM378eBYsWJB+s1mW1eVmk3g8TlNTE67r0tTURGNjI8eOHcPzPIqKii7r
      hNVQUlJSwsmTJ4lGo+k3XDKZpLm5maVLlzJmzHcPLfvTZ7t4nkdTU1O6fSKRwPM8WlpaaG1t
      HZJ/Q70RDocpKipi//79TJo0KT396NGjLF26lKlTp6an/enzdDzPY+fOndx1110kk0laWloo
      Ly/n3Llz2LZNQUHBkHkQ5eXq6Js6Dv8AlJeXM2PGDObPn5/++3Icp8tAa8OGDekBa2NjY/qw
      ZWtrK01NTX0+1+T88pe//GWft2iQyc/Pp6SkBN/3mT17dvqYbmlpKfv376e2tpaJEydyzTXX
      YNs2Y8eO7RQC1157LV9++SUnTpxgyZIljBo1asiMeGOxGMXFxaRSKW78/9u7f5ZGoigK4CcR
      Z6KJJjiJ0WRijKBgYdRKCwtFbEQbP4C9Cgrapkmdj2CjrWAKeyWFhRZBgg4G1MJIxBB0mKio
      EWe2EGcJuMuy7JI/c35tmnlheIf7hndvNAq73Q5RFBEKhXBxcWEGQTAYhCAI8Hq9FSFweXmJ
      bDYLURRRKBTg9XqRy+Vwfn6OYrGIyclJtLa2/uYJ6o/NZoPf70dzczP6+vrgcrlgs9kQCATw
      +voKRVHQ3t6OQCAAt9sNl8tVUTWpqop0Og273W5uYCMjI+Y7NDY2BkmS6uYd+hOGYcDn86Gj
      owNOpxPBYBCGYUCSJHg8HvMbgCzL6OrqQlNTEyTpZxfLcrkMTdNQKBSQz+fx8vICSZKQTqdx
      dXUFt9uN0dHRhvvP2tra0NnZCV3XMTg4+O3e1NPT88u9qVQq4e7uDre3t8jn8xgaGgIAZDIZ
      PD09YWpq6q9OK3gTmIjIohruCIiIiP4MA4CIyKIYAEREFsUAICKyKAYAARokPgAAAaNJREFU
      EZFFMQCIiCyKAUBEZFEMACIii2qoXkBEjUhVVRwfH0MQBEQiEfT29n57U1bXdWiaBo/H01A3
      aen/YQVAVONyuRy2traQzWYRj8exs7Nj/vbx8WF249Q0DfF4vGI4S7lcbriZBPTvsAIgqgOR
      SATLy8tYWFjA+vo6ZmdnkUwmcXR0hOfnZ6yuriKVSiGTyWBtbQ0rKytQFAUHBwfQdR2xWAyh
      UKjay6AawwqAqI74/X44HA6USiXMz89jaWkJ4+Pj2N/fx+LiIgYGBpBIJBAOh7G7u4tYLIbp
      6Wns7e1V+9GpBrECIKoj9/f3eHt7g9PpRCKRQHd3N4DPNstfrZe/hoc8Pj5ie3sbACraoxN9
      YQVAVAeur6+xubmJjY0NzM3NoaWlBTc3NwiHwygWiwA+W4I/PDwgmUzi/f0dsixDlmUMDw/D
      4XBUeQVUi9gOmqjGqaqKw8NDCIKA/v5+c5zg6ekpzs7OzNkX0WgUiqLg5OQEMzMzEEURqVQK
      hmFgYmICPp+vyiuhWsMAICKyKB4BERFZFAOAiMiiGABERBb1A6VTolZ/OCfpAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='384' name='US Cases Exponential Trend' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='US Cases by State' width='384'>
      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
      TITL0UR/fz8dHR0l87p79248zxt1H1JKMpkMXV1d5v2BAwd46623eO+998ZldEtvby/d3d3m
      fRAE7Nq1qyT/53DwPI8dO3bQ2tpqKgzs27ePDRs2lNyz8YSuri4OHDhg3p8wCmDr1q3cd999
      DA4OAurBXLFiBdu2bRt1H08//TTvvfce+XyeBx988IT6gWzfvp17772XgYEBAAYGBrj33nvZ
      unXrqPvYsWMHDz74IE8++SSgFOaaNWuwbZtNmzaxZs2aT2TsYxlvvvkm999/vxH4HR0d3HXX
      Xbz//vuj7uPtt9/mgQce4MUXXwTUvXn44YexbZs1a9awZcuWT2TsYxkvvPAC//znP80z+O67
      73L33XfT19c3qu+HYciqVatob2+ns7OTxx9/nO7ubjZv3ozjODzzzDPs2bPnk7yEMYmnn36a
      xx9/3MzrcR8FVIzGxkbeeecdzj33XFpbWzn99NMBZf2uXr2aXC7HSSedxOc+9zlaWlooLy9n
      165dLF26FNu2GRwcZOHChZSXl7Nx48YxkmF85NDU1ERrayvNzc288847NDU1AaXz09DQwPnn
      n2/mp62tjS996UvYtk1NTQ3f+ta3WLlyJQCu63LZZZchpSSdTvPuu+8ey8s7Zjj55JPZtWsX
      p556Khs3buSss84CoK+vj2effRbf95k/fz5nnXUWr732GmVlZXR3d7NkyRIAGhoamDt3Ls88
      8wwAuVyO2tpaTjvtNIASi228QAhBXV0dnZ2dTJs2jU2bNpkCkR0dHbz88suEYciZZ57JvHnz
      ePPNN/F9tVvbwoULEUJw2WWX4boug4ODPPbYY9TV1XHppZcSBAHt7e0n3Cp/NCgrUyXN+/v7
      qa6uPnFWAABz5sxh165dSCnZu3cvs2fPBtTmMosWLWLp0qVs3bqVbDbL22+/TVtbGxdffLGJ
      dT/33HNZsWIFy5cvZ968eSeU8AeYPXs2u3fvNjTFnDlzgNL52b59O5lMhs2bN7Nz504uueQS
      Mz+TJk36QIZjW1sbd999N0888QRf+MIXjvYljQk0NTWxZcsWwjCkt7eXqVOnAjBhwgSWLFnC
      F7/4RdatWwfAunXr6Onp4cILLzTfnzJlSkm+RU1NDQMDA9x33308++yzRvCNN5x99tmsX78e
      3/fxfZ/KykoAJk6cyNKlS1m8eDFr1qwhCAJeeuklLMuiubkZUArEcRz27NnDww8/zKJFiwBo
      aWnhjjvuYP/+/cydO/eYXduxRGNjI62trfT19Z1YK4B0Om2s1srKSlzXJQgCenp6ePbZZ6mr
      qyOXyxEEAVVVVSxZsqQkKWft2rV873vfI51Oc//999Pc3Pyx09zHElKpFJWVlbS1tVFRUUEq
      lcLzPHp7e1m9enXJ/FRWVnLppZceNmlp9uzZXH311Wzfvp3Vq1fzla985ShdzdhBRUUFYRiy
      c+dO6uvrjTBvb29n7dq1TJs2Dc/zkFJSU1PDRRdddEjjoq2tjfr6ei666CLa2tpYs2YNl156
      6dG6nDGDKVOmcODAAXbs2MG8efPo7OwEYOfOnWzevJmamhpDvc2aNYvm5uaSeX3nnXdoaWnh
      iiuuoKqqCoBzzjmHBQsWsGbNmpJVxXjCrFmzeOqpp4ATyAcQobGxkVWrVtHY2Gg+a2tr45RT
      TuGss84yAt227Q9kuXqex+DgIJlMhlwud1THfbTQ1NTEqlWrWLBggfls165dzJs3r2R+Rkqs
      yWQy9Pf343ke/f399PT0sHPnToIgYPLkyQwNDR3VaxlLmDdvHk888QSf+tSnzGetra2cc845
      nHHGGSYBbHjNGyklQ0NDDAwMkM/n6e/vJwxDhoaGyGQyDAwMnFC+qA8DIQQNDQ08//zzhq4E
      Na/nn38+CxYsMM/w8HkNgoAXX3yRJUuWEAQBAwMD7N27l46ODoQQVFdXj9vfq+u6VFVVsWXL
      Fuwbb7zxxmM9oCOFyspK6urqCIKApqYmLMuioqKCk046iY0bN9LV1cXMmTNpaGjAsixqa2tL
      lMCsWbNoaWmhra2N888/nylTppwwNJCUksrKSqZNm1YyP+Xl5Zx00kls2rSJjo4OMz+2bX9g
      frZs2cLWrVtJp9N0dHQwffp0tm3bRmtrKz09PVx88cXjsszBpEmTqKurQ0rJ/PnzEUIwceJE
      GhoaWLduHb29vcyZM4eGhgYApk2bVvL9DRs2sHv3bhzHoauri6amJvL5PBs3biQIAi644IJx
      sQnScEydOpXa2lps22b27NlIKZkyZQrTpk3j9ddfJ5PJMGvWLOrr6xFCUFtba77r+z59fX10
      dHSwb98++vr6qK+vZ/369Wzfvh3XdWlubh6XmdnTpk1j0qRJVFVVJZnACRIkSDBeccJRQAkS
      JEiQYHRIFECCBAkSjFMkCiBBggQJxikSBZAgQYIE4xSJAkiQIEGCcYpEASRIkCDBOEWiABIk
      SJBgnGL8ZZckSDDOEJX9rq2tZdKkScd6OKOG53ns2rULIQQnn3zyuEza+qSRrAASJBhj6O/v
      58knn2T16tW8++67By0FEWW7Hg633347r776Ku3t7bS0tLB27VrT586dO3nqqac+VJ19gKGh
      If7yl7+MeCyXy/HCCy/w0EMPmQqx2WyWxx57jFWrVpkqnFu3buUf//gHzz33HEEQACor+u9/
      /zttbW3k83laWlq46aabTtjSLMcaiQJIkGCM4f3332f58uVs3bqVm2++mb/97W/mWBAEZuOd
      vXv3cuutt5Z8N5/Pf0BhWJbFlVdeyYIFC7jnnnv47W9/awTq8uXLue2228zGQMX9j4QgCAiC
      AM/zeO2115BSUigUStqsWLGCV155hWw2yw033EB/fz9/+tOf2LRpE2+88QZ33HEHO3bs4I9/
      /CP5fJ6VK1fy+OOP09rayu9+9zscx+FnP/sZAN/4xjeYPn36uK2H9EkjoYASJBiDmDVrFj/8
      4Q+56qqr+PGPf8zll1/OXXfdxfbt28lms/zyl7/krrvuoqWlhR/96Ef86le/4pFHHmHz5s0I
      IbjpppsOSvecc845vPHGGzQ3N9PX12dqE91zzz28/vrrDA4Ocv311zNr1ixuvfVWqqqqqK+v
      p76+npUrV1JRUcF1113H/v37+elPf8revXv5xS9+YUoxX3PNNZSXl9Pb28sTTzxBJpNhw4YN
      3HnnnQBce+21fPe73+X222/HdV26u7vp7+/nueee46qrrmLZsmXs2LGDlpYWFi9efFTme7wi
      WQEkSDCGUVNTQ3V1NQcOHOCaa67hBz/4AXPnzmXt2rV85zvf4cwzz+QPf/gDvu+zbt06brzx
      Rk455RSee+65g/Z54YUX8vLLL7N+/XrOPvts8/lXv/pVrr32Wpqbm1m9ejVBEPDKK6/Q2NjI
      smXLuP/++/n973/PbbfdxqRJk5g4cSK/+c1v+PrXv86mTZtMPxUVFaxfv56f/OQnfPOb3ySV
      SlFWVkY6naaqqopCoYBlWeTzeX7961+zZ88eli1bxv79+6mrq0MIwbRp0+jp6flE5zZBogAS
      JBjT6Ovro7+/n3Q6zc0330xLSwuWZVEoFEwJ5FQqRTabpbOzk+XLlzMwMHBIZ29jYyPbtm3j
      +eefNxulSCm55ZZbePXVV0tonaamJq644gpTPr2mpoaysjIsy8JxHCorK5kwYUIJRfPGG29w
      2223ccMNN3D55ZdTUVFBNps15dYdxyEMQ37+858zZ84cbrnlFioqKpg8eTKdnZ1IKenq6jqu
      HNbHKxIFkCDBGMTevXtZvnw51113HUuXLiWdTtPZ2cmsWbPM5vEVFRW0tbXx6KOPUl1dTU1N
      DfPnz6epqYlUKnXQvi3L4pRTTmHDhg1mVywpJTt27GDu3Lmm/6itEILKykqmTp3KX//6Vx55
      5JFDblP50EMPMXv2bLNfcj6f54wzzuDOO+/kz3/+M5/5zGdobW1l3759OI7DypUr+d///sdF
      F13Egw8+yL/+9S9ee+01zjvvvCM0mwkOhhNqP4AECU4EuK7LpEmTmDx5MsuWLWPx4sVMmDCB
      hoYGOjo6uOSSSzj11FOZOXMmJ598Mu3t7ZxxxhksWrSI3bt3k05GQ1/gAAABIElEQVSnOe+8
      88z+r8888wyLFy8mlUpRU1PDnDlzmDdvHp/+9Kepr6+ntraWuXPncvrpp9PW1sbixYs57bTT
      mDFjBnV1dcycORPLsvj85z9PV1cXruvS2NhIQ0MDM2fOpLy8nIaGBmpqagAoLy+npqaGdDpN
      Op1m7ty5LFy4kP3791NbW8vVV1+N67rU19ebNrW1tTQ1NTF37lx2797N97//faZPnw7Af//7
      XxYtWnRIpZbgoyHZDyBBghMc119/Pc3NzZx77rnMnz//WA9n1BgcHOTpp5/m0Ucf5f/+7//M
      nsAJjhwSBZAgwQmOtrY2BgcHmT59utmw/nhAPp9n27ZtCCFYsGBBkgj2CSBRAAkSJEgwTpE4
      gRMkSJBgnOL/AzA41VLSi0iOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='US Cases, Recovered, Deaths' width='384'>
      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
      c+f4wx/+wODg4ISeb4zhvffeo6uri+7ubrZs2UJvby8nT54kFArx4Ycf0traOp1voSBt27aN
      LVu2ZD/XGX8U0IXuvPNOTp06xX333UdDQwNf+9rXgJHe7/bt20kmk9x44418+9vf5uDBg8yd
      O5eWlhZWr15NMBgkFovx0EMPMXfuXI4fP14wZxhPlRUrVtDQ0MDKlSs5deoUK1asAMZ/PosW
      LeLBBx/Mfj7Nzc089dRTBINBFi5cyIsvvsiGDRsAKCoq4umnn8ZaS0lJCefOncvn28ubpUuX
      0tLSwvLlyzl+/Dj33HMPAIODg+zYsQPXdbn11lu555572L9/P6WlpfT29vL4448DsGjRIm65
      5RY+/PBDAJLJJNdffz233347wLgem184jkNVVRXd3d1UVlZy4sSJ7ASR4XCYTz75BGMMd911
      F8uWLePw4cO4rou1loceegjHcXj66acpKioiFouxadMmqqqqeOKJJ/A8j66urlm3lT8RpaWl
      wEgHuby8fPZsAQAsWbKElpYWrLW0tbVx8803AyMXl3nkkUdYvXo1p0+fJpFIUFdXR3NzM489
      9lj2WPf77ruPV155hd/97ncsW7ZsVhV/gJtvvpnz589nhymWLFkCjP98zp49Szwe5+TJkzQ1
      NfH9738/+/lcc801XzrDsbm5mT/84Q+8//77rFq1KtdvqSCsWLGC+vp6jDEMDAxw3XXXATBn
      zhwef/xxnnzySQ4cOADAgQMH6O/v57vf/W72+RUVFePOt1i4cCHRaJTXXnuNHTt2ZAuf33zz
      m9/kyJEjuK6L67qUlZUBsGDBAlavXs33vvc9amtr8TyPPXv2EAgEWLlyJTASIKFQiNbWVt56
      6y0eeeQRAA4ePMj//M//0NfXxy233JK395ZPd955Jw0NDQwODs6uLYCSkpJsr7WsrIyioiI8
      z6O/v58dO3ZQVVVFMpnE8zzmz5/P448/Pu6knH379vGzn/2MkpIS1q1bx8qVK6/6NPdCUlxc
      TFlZGc3NzcybN4/i4mLS6TQDAwNs37593OdTVlbGE0888ZUnLd18882sXbuWs2fPsn37dn74
      wx/m6N0Ujnnz5mGMoampierq6mwx7+rqYt++fVRWVpJOp7HWsnDhQh599NG/2rlobm6murqa
      Rx99lObmZmpra3niiSdy9XYKRkVFBZFIhMbGRpYtW0Z3dzcATU1NnDx5koULF2aH3hYvXszK
      lSvHfa6nTp3i4MGD/OhHP2L+/PkAfOtb3+KOO+6gtrZ23FaFnyxevJitW7cCs2gfwJg777yT
      9957jzvvvDO7rLm5mdtuu4177rknW9CDweCXznJNp9PEYjHi8TjJZDKn7c6VFStW8N5773HH
      HXdkl7W0tLBs2bJxn8+lTqyJx+MMDQ2RTqcZGhqiv7+fpqYmPM/j2muvZXh4OKfvpZAsW7aM
      999/n69//evZZQ0NDXzrW9/iG9/4RvYEsIvnvLHWMjw8TDQaJZVKMTQ0hDGG4eFh4vE40Wh0
      Vu2LuhKO47Bo0SJ27tyZHa6Ekc/1wQcf5I477sh+hy/+XD3PY/fu3Tz++ON4nkc0GqWtrY1w
      OIzjOJSXl/v2/2tRURHz58+nvr6e4K9//etf57tBU6WsrIyqqio8z2PFihUEAgHmzZvHjTfe
      yPHjx+np6eGmm25i0aJFBAIBrr/++nEhsHjxYg4ePEhzczMPPvggFRUVs2YYyFpLWVkZlZWV
      4z6fuXPncuONN3LixAnC4XD28wkGg1/6fOrr6zl9+jQlJSWEw2FuuOEGzpw5Q0NDA/39/Tz2
      2GO+nObgmmuuoaqqCmstt956K47jsGDBAhYtWsSBAwcYGBhgyZIlLFq0CIDKyspxzz969Cjn
      z58nFArR09PDihUrSKVSHD9+HM/z+M53vuObiyBd6LrrruP6668nGAxy8803Y62loqKCyspK
      PvvsM+LxOIsXL6a6uhrHcbj++uuzz3Vdl8HBQcLhMO3t7QwODlJdXc2RI0c4e/YsRUVFrFy5
      0pdnZldWVnLNNdcwf/58nQksIuJXs24ISEREJkYBICLiUwoAERGfUgCIiPiUAkBExKcUACIi
      PqUAEBHxKQWAiIhP+e/0QhEBRqYAqa+vZ+7cudx+++1UVVVd8nGZTIZEIkF5eXmOWyjTTVsA
      Ij61b98+Nm/ezOHDh/n5z3/OZ599lr1vbGplgDNnzvBf//Vf2fustSSTSd/OUTSbaAtAxMfu
      v/9+fvrTn/LII4/w3//939x777385je/ob29nVQqxa9+9Sv+93//l9OnT9PX18cvf/lL3njj
      Dc6dO0dpaSm//vWvs9M0y8yjLQARn3MchxUrVtDR0UEgEOCf//mf+dnPfkZlZSXHjh3jH//x
      H7n//vv5zW9+QywW4+TJk/zbv/0bFRUV7N+/P9/Nl6ugABARzpw5Q3V1NYlEgl/96lccP36c
      UCiE67oUFRXhOA7FxcVEo1HC4TC//e1vMcYwb968fDddroKGgER87NChQ8RiMT7++GP+5V/+
      hXg8Tn9/PzU1NezduxcYuQLX8ePHef/997n77ruZN29edsrq2XTBJD/SdNAiPtXU1ERdXR1z
      587la1/7WvYooF27dtHT08OyZctYuHAhN910E3v37qW9vZ2nn36a/v5+9u7dy/z581m1apX2
      AcxgCgAREZ/SPgAREZ9SAIiI+JQCQETEp/4fcg0oRhGm2XEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
